// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

#nullable disable

namespace OfferTest.Migrations
{
    [DbContext(typeof(TestDbContext))]
    [Migration("20230930221344_InitialMigration2")]
    partial class InitialMigration2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Models.Amount", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<decimal>("Amount_Value")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Buyer_ID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("Buyer_ID");

                    b.ToTable("Amounts");
                });

            modelBuilder.Entity("Models.Buyer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZipCode")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Buyers");
                });

            modelBuilder.Entity("Models.Offer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("Models.PossibleAmounts", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("AmountID")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("OfferID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AmountID");

                    b.HasIndex("OfferID");

                    b.ToTable("PossibleAmountss");
                });

            modelBuilder.Entity("Models.Previous_Status", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("OfferID")
                        .HasColumnType("int");

                    b.Property<int>("StatusID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("OfferID");

                    b.HasIndex("StatusID");

                    b.ToTable("Previous_Statuses");
                });

            modelBuilder.Entity("Models.Status", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime?>("status_date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("Models.Amount", b =>
                {
                    b.HasOne("Models.Buyer", "Buyer")
                        .WithMany("Amounts")
                        .HasForeignKey("Buyer_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Buyer");
                });

            modelBuilder.Entity("Models.PossibleAmounts", b =>
                {
                    b.HasOne("Models.Amount", "Amount")
                        .WithMany("PossibleAmounts")
                        .HasForeignKey("AmountID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Offer", "Offer")
                        .WithMany("PossibleAmounts")
                        .HasForeignKey("OfferID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Amount");

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("Models.Previous_Status", b =>
                {
                    b.HasOne("Models.Offer", "Offer")
                        .WithMany("Previous_Statuses")
                        .HasForeignKey("OfferID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Status", "Status")
                        .WithMany("Previous_Statuses")
                        .HasForeignKey("StatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Offer");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Models.Amount", b =>
                {
                    b.Navigation("PossibleAmounts");
                });

            modelBuilder.Entity("Models.Buyer", b =>
                {
                    b.Navigation("Amounts");
                });

            modelBuilder.Entity("Models.Offer", b =>
                {
                    b.Navigation("PossibleAmounts");

                    b.Navigation("Previous_Statuses");
                });

            modelBuilder.Entity("Models.Status", b =>
                {
                    b.Navigation("Previous_Statuses");
                });
#pragma warning restore 612, 618
        }
    }
}
